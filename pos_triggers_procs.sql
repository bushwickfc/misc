CREATE PROCEDURE checkSearch(IN updatedProductID varchar(255) CHARSET utf8)
BEGIN
  DECLARE inStock, inSearch CHAR(1) DEFAULT(0);

  DECLARE updatedProductNAME varchar(255);
  SELECT NAME FROM PRODUCTS WHERE ID = updatedProductID
  LIMIT 1 INTO updatedProductNAME;

  IF updatedProductNAME NOT LIKE "ZZZ%" THEN
    SET inStock = 1;
  END IF;

  IF updatedProductID IN (SELECT STOCKCURRENT.PRODUCT FROM STOCKCURRENT WHERE STOCKCURRENT.PRODUCT LIKE updatedProductID AND STOCKCURRENT.UNITS > 0) THEN
    SET inSearch = 1;
  END IF;

  IF inStock = 1 AND inSearch = 0 THEN
    UPDATE STOCKCURRENT
      SET STOCKCURRENT.UNITS = STOCKCURRENT.UNITS + 100000
      WHERE STOCKCURRENT.PRODUCT LIKE updatedProductID;
  ELSEIF inStock = 0 AND inSearch = 1 THEN
    UPDATE STOCKCURRENT
      SET STOCKCURRENT.UNITS = 0
      WHERE STOCKCURRENT.PRODUCT LIKE updatedProductID;
  END IF;
END

CREATE PROCEDURE updateCatalog()
BEGIN
  INSERT INTO PRODUCTS_CAT (product)
    (SELECT PRODUCTS.ID FROM PRODUCTS
    WHERE PRODUCTS.NAME NOT LIKE "ZZZ%"
    AND PRODUCTS.ID NOT IN (SELECT PRODUCTS_CAT.PRODUCT FROM PRODUCTS_CAT));

  DELETE FROM PRODUCTS_CAT WHERE PRODUCTS_CAT.product IN
    (SELECT PRODUCTS.ID FROM PRODUCTS WHERE PRODUCTS.NAME LIKE "ZZZ%");
END

CREATE TRIGGER beforeInsertOnProducts BEFORE INSERT ON PRODUCTS
  FOR EACH ROW
  BEGIN
    IF NEW.CODETYPE IS NULL THEN
      SET NEW.CODETYPE = 'UPC-E';
    END IF;
    IF NEW.NAME LIKE "%BY WEIGHT%" AND NEW.ISSCALE = 0 THEN
      SET NEW.ISSCALE = 1;
    END IF;
  END

CREATE TRIGGER afterNewProduct AFTER INSERT ON PRODUCTS
  FOR EACH ROW
    BEGIN
      CALL checkSearch(NEW.ID);
    END

CREATE TRIGGER beforeUpdateProductName BEFORE UPDATE ON PRODUCTS
  FOR EACH ROW
    BEGIN
      IF OLD.NAME NOT LIKE NEW.NAME THEN
        SET NEW.DISPLAY = concat('<HTML>', NEW.NAME);
        CALL checkSearch(NEW.ID);
        CALL updateCatalog;
      END IF;
    END

CREATE TRIGGER afterInsertStock AFTER INSERT ON PRODUCTS_CAT
  FOR EACH ROW
    BEGIN
      CALL checkSearch(NEW.PRODUCT);
    END
